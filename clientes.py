import json
import os

CLIENTES_JSON_PATH = "clientes.json"
clientes = {}

# Cargar datos desde el archivo JSON
def cargar_clientes():
    global clientes
    if os.path.exists(CLIENTES_JSON_PATH):
        print("Archivo encontrado, cargando datos...")
        with open(CLIENTES_JSON_PATH, "r", encoding="utf-8") as file:
            clientes = json.load(file)
        print(f"‚úÖ Clientes cargados: {clientes}")  # Depuraci√≥n
    else:
        print("‚ö†Ô∏è Archivo no encontrado, inicializando diccionario vac√≠o.")
        clientes = {}

# Guardar datos en el archivo JSON
def guardar_clientes():
    with open(CLIENTES_JSON_PATH, "w", encoding="utf-8") as file:
        json.dump(clientes, file, indent=4, ensure_ascii=False)

def obtener_opcion():
    while True: 
        try:
            opcion = input('Seleccione una opci√≥n: ').strip()
            if opcion == '':  # Si est√° vac√≠o
                continue
            opcion = int(opcion)
            if 1 <= opcion <= 6:
                return opcion
            print('Por favor, ingrese una opci√≥n v√°lida (1-6).')
        except ValueError:
            print('Error: Debe ingresar un n√∫mero. Intente nuevamente.')

def mostrar_menu():
    print('‚ú®‚ú® ------------------------------‚ú®‚ú®')
    print('------- Bienvenido al registro -------')
    print('‚ú®‚ú® ------------------------------‚ú®‚ú®')
    print('[1] ‚ûï   Registrar un cliente') 
    print('[2] üóëÔ∏è   Eliminar un cliente')
    print('[3] üñãÔ∏è   Buscar un cliente')
    print('[4] üîé   Lista de clientes')
    print('[5] üîé   Lista de clientes preferenciales')
    print('[6] üë£   Salir')
    print('‚ú®‚ú® ------------------------------‚ú®‚ú®')
def pausar():
    input("\nPresione Enter para continuar...")

def registrar_clientes():
    try:
        cedula = input('\nIngrese la c√©dula del cliente: ').strip()
        if cedula in clientes:
            print('‚ö†Ô∏è El cliente ya existe. Ingrese otra c√©dula.')
        else:
            nombre = input('Ingrese el nombre: ').title()
            apellido = input('Ingrese el apellido: ').title()
            correo = input('Ingrese el correo: ').lower()
            telefono = input('Ingrese el tel√©fono: ').strip()
            direccion = input('Ingrese la direcci√≥n: ').title()
            preferencial = input('¬øEs cliente preferencial? (s/n): ').lower() == 's'
            
            # Agregar el cliente al diccionario
            clientes[cedula] = {
                'nombre': nombre,
                'apellido': apellido,
                'correo': correo,
                'telefono': telefono,
                'direccion': direccion,
                'preferencial': preferencial
            }
            print(f'‚úÖ Cliente {nombre} {apellido} agregado exitosamente!')
            guardar_clientes()  # Guardar cambios en el archivo JSON
    except ValueError:
        print('‚ùå Error: La c√©dula debe ser un n√∫mero entero.')
    pausar()

def eliminar_cliente():
    try:
        cedula = input('\nIngrese la c√©dula del cliente: ').strip()
        if cedula not in clientes:
            print('‚ö†Ô∏è El cliente no existe. Por favor registre el cliente primero.')
            return
        del clientes[cedula]  # Eliminar cliente del diccionario
        print(f'‚úÖ Cliente con c√©dula {cedula} eliminado exitosamente!')
        guardar_clientes()  # Guardar cambios en el archivo JSON
    except ValueError:
        print('‚ùå Error: La c√©dula debe ser un n√∫mero entero.')
    pausar()

def buscar_cliente():
    try:
        cedula = input('\nIngrese la c√©dula del cliente: ').strip()
        print(f"\nüîç Buscando c√©dula: {cedula}")
        print(f"üîç Clientes disponibles: {list(clientes.keys())}\n")

        if cedula not in clientes:
            print('‚ö†Ô∏è El cliente no existe. Por favor registre el cliente primero.')
            return
        
        cliente = clientes[cedula]
        print('‚ú®‚ú® ------------------------------‚ú®‚ú®')
        print('------- Cliente Encontrado -------')
        print('‚ú®‚ú® ------------------------------‚ú®‚ú®')
        print(f"Nombre: {cliente['nombre']}")
        print(f"Apellido: {cliente['apellido']}")
        print(f"Correo: {cliente['correo']}")
        print(f"Tel√©fono: {cliente['telefono']}")
        print(f"Direcci√≥n: {cliente['direccion']}")
        print(f"Preferencial: {'S√≠' if cliente['preferencial'] else 'No'}")
        print('-------------------------------------')
    except ValueError:
        print('‚ùå Error: La c√©dula debe ser un n√∫mero v√°lido.')
    pausar()

def listar_clientes(): 
    no_preferenciales = [cliente for cliente in clientes.values() if not cliente['preferencial']]  # Filtra los clientes no preferenciales

    if not no_preferenciales:
        print('‚ö†Ô∏è No hay clientes no preferenciales registrados.')
    else:
        print('‚ú®‚ú® ------------------------------‚ú®‚ú®')
        print('------- Lista de clientes no preferenciales -------')
        print('‚ú®‚ú® ------------------------------‚ú®‚ú®')
        for cliente in no_preferenciales:
            print(f"Cliente: {cliente['nombre']} {cliente['apellido']}")
            print(f"Correo: {cliente['correo']}")
            print(f"Tel√©fono: {cliente['telefono']}")
            print(f"Direcci√≥n: {cliente['direccion']}")
            print('-----------------------------------')
    pausar()

def listar_clientes_preferenciales():
    preferenciales = [cliente for cliente in clientes.values() if cliente['preferencial']] #Filtra los clientes que tienen el valor True en la clave 'preferencial'.
#Solo los clientes preferenciales ser√°n incluidos en la nueva lista.

    if not preferenciales:
        print('‚ö†Ô∏è No hay clientes preferenciales registrados.')
    else:
        print('‚ú®‚ú® ------------------------------‚ú®‚ú®')
        print('------- Lista de clientes -------')
        print('‚ú®‚ú® ------------------------------‚ú®‚ú®')
        for cliente in preferenciales:
            print(f"Cliente: {cliente['nombre']} {cliente['apellido']}")
            print(f"Correo: {cliente['correo']}")
            print(f"Tel√©fono: {cliente['telefono']}")
            print(f"Direcci√≥n: {cliente['direccion']}")
            print('-----------------------------------')
    pausar()

def main():
    cargar_clientes()  # Cargar clientes al iniciar el programa
    while True:
        mostrar_menu()
        opcion = obtener_opcion()
        
        if opcion == 1:
            registrar_clientes()
        elif opcion == 2:
            eliminar_cliente()
        elif opcion == 3:
            buscar_cliente()
        elif opcion == 4:
            listar_clientes()
        elif opcion == 5:
            listar_clientes_preferenciales()
        elif opcion == 6:
            print('\nüëã ¬°Hasta luego! Gracias por usar el sistema.')
            break

if __name__ == "__main__":
    main()
